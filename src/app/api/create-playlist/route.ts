import { NextResponse } from "next/server";
import { createYoutubePlaylist, addVideosToPlaylist } from "../auth/[...nextauth]/youtube";

export async function POST(request: Request) {
  try {
    const { accessToken, userId, playlistName, tracks } = await request.json();

    if (!accessToken || !userId) {
      let errorMessage = "Missing required credentials.";
      if (!userId) {
        errorMessage = "YouTube user ID is missing. Please try logging out and back in.";
      }
      return NextResponse.json({ error: errorMessage }, { status: 400 });
    }

    if (!tracks || !Array.isArray(tracks) || tracks.length === 0) {
      return NextResponse.json(
        { error: "No tracks provided for the playlist" },
        { status: 400 }
      );
    }

    // Create a new playlist
    const playlist = await createYoutubePlaylist(
      accessToken,
      playlistName,
      `Generated by YouTube Playlist Maker - Based on your music preferences`
    );

    // Add tracks to the playlist
    const videoIds = tracks.map(track => track.uri);
    if (playlist.id) {
        await addVideosToPlaylist(accessToken, playlist.id, videoIds);
    } else {
        throw new Error("Failed to create playlist: Missing playlist ID");
    }
        await addVideosToPlaylist(accessToken, playlist.id, videoIds);
    } else {
      name: playlist.snippet?.title || playlistName,
    }

    return NextResponse.json({
      name: playlist.snippet?.title || playlistName,
      playlistId: playlist.id,
      url: `https://www.youtube.com/playlist?list=${playlist.id}`
    return NextResponse.json(
      { error: error.message || "Failed to create playlist" },
      { status: error.response?.status || 500 }
    );
  }
}
    });

  } catch (error: any) {
    console.error("YouTube API error:", error.response?.data);
    
    // Check for quota exceeded error
    if (error.response?.status === 403 && error.response?.data?.error?.errors?.some((e: any) => e.reason === 'quotaExceeded')) {
      return NextResponse.json(
        { 
          error: "YouTube API quota has been exceeded. Please try again later or contact support.",
          details: "This is a temporary limitation. The quota will reset at midnight Pacific Time (PT)."
        },
        { status: 429 }
      );
    }

    return NextResponse.json(
      { error: error.message || "Failed to create playlist" },
      { status: error.response?.status || 500 }
    );
  }
}